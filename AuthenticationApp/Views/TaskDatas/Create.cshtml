@model AuthenticationApp.ViewModels.TaskDataViewModel

@{
    ViewBag.Title = "Create";
}

<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

<div class="row top grey-text">
    <div class="offset-md-4 col-md-4">
        @using (Ajax.BeginForm("Create", "TaskDatas", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "result" }))
        {
                   
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Create a new RFQ </h4>
                <hr />
 
                <div class="form-group">
                    @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EnumDropDownListFor(model => model.UserType, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                    </div>
                </div>

 
                <div class="form-group">
                    @Html.LabelFor(model => model.PartNumberRevision, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.PartNumberRevision, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PartNumberRevision, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MaterialCategory, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EnumDropDownListFor(model => model.MaterialCategory, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MaterialCategory, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Material, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EnumDropDownListFor(model => model.Material, htmlAttributes: new { @class = "form-control", @id = "materialType" })
                        @Html.ValidationMessageFor(model => model.Material, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group" id="materialMainType">
                    @Html.LabelFor(model => model.MaterialMainType, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EnumDropDownListFor(model => model.MaterialMainType, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MaterialMainType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Process, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EnumDropDownListFor(model => model.Process, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Process, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SurfaceFinish, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EnumDropDownListFor(model => model.SurfaceFinish, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SurfaceFinish, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SwitchesAttributes, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EnumDropDownListFor(model => model.SwitchesAttributes, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SwitchesAttributes, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.OverlaysAttributes, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EnumDropDownListFor(model => model.OverlaysAttributes, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OverlaysAttributes, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.QuantityBreak, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EnumDropDownListFor(model => model.QuantityBreak, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.QuantityBreak, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LeadTime, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EnumDropDownListFor(model => model.LeadTime, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LeadTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FileType, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-6">
                        @Html.EnumDropDownListFor(model => model.FileType, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FileType, "", new { @class = "text-danger" })
                    </div>
                </div>

 
                <div class="form-group">
                    <div class="md-form text-xs-center">
                        <button type="submit" class="btn btn-cyan" style="width:50%;">Create</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
